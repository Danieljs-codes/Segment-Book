/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as MainRequestsImport } from './routes/_main/requests'
import { Route as MainProfileImport } from './routes/_main/profile'
import { Route as MainNotificationsImport } from './routes/_main/notifications'
import { Route as MainDonationsImport } from './routes/_main/donations'
import { Route as MainDashboardImport } from './routes/_main/dashboard'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as MainMessagesIndexImport } from './routes/_main/messages/index'
import { Route as MainMessagesChatIdImport } from './routes/_main/messages/$chatId'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const MainRequestsRoute = MainRequestsImport.update({
  path: '/requests',
  getParentRoute: () => MainRoute,
} as any)

const MainProfileRoute = MainProfileImport.update({
  path: '/profile',
  getParentRoute: () => MainRoute,
} as any)

const MainNotificationsRoute = MainNotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => MainRoute,
} as any)

const MainDonationsRoute = MainDonationsImport.update({
  path: '/donations',
  getParentRoute: () => MainRoute,
} as any)

const MainDashboardRoute = MainDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => MainRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)

const MainMessagesIndexRoute = MainMessagesIndexImport.update({
  path: '/messages/',
  getParentRoute: () => MainRoute,
} as any)

const MainMessagesChatIdRoute = MainMessagesChatIdImport.update({
  path: '/messages/$chatId',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthImport
    }
    '/_main/dashboard': {
      id: '/_main/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardImport
      parentRoute: typeof MainImport
    }
    '/_main/donations': {
      id: '/_main/donations'
      path: '/donations'
      fullPath: '/donations'
      preLoaderRoute: typeof MainDonationsImport
      parentRoute: typeof MainImport
    }
    '/_main/notifications': {
      id: '/_main/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof MainNotificationsImport
      parentRoute: typeof MainImport
    }
    '/_main/profile': {
      id: '/_main/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MainProfileImport
      parentRoute: typeof MainImport
    }
    '/_main/requests': {
      id: '/_main/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof MainRequestsImport
      parentRoute: typeof MainImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/_main/messages/$chatId': {
      id: '/_main/messages/$chatId'
      path: '/messages/$chatId'
      fullPath: '/messages/$chatId'
      preLoaderRoute: typeof MainMessagesChatIdImport
      parentRoute: typeof MainImport
    }
    '/_main/messages/': {
      id: '/_main/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MainMessagesIndexImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainRouteChildren {
  MainDashboardRoute: typeof MainDashboardRoute
  MainDonationsRoute: typeof MainDonationsRoute
  MainNotificationsRoute: typeof MainNotificationsRoute
  MainProfileRoute: typeof MainProfileRoute
  MainRequestsRoute: typeof MainRequestsRoute
  MainMessagesChatIdRoute: typeof MainMessagesChatIdRoute
  MainMessagesIndexRoute: typeof MainMessagesIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainDashboardRoute: MainDashboardRoute,
  MainDonationsRoute: MainDonationsRoute,
  MainNotificationsRoute: MainNotificationsRoute,
  MainProfileRoute: MainProfileRoute,
  MainRequestsRoute: MainRequestsRoute,
  MainMessagesChatIdRoute: MainMessagesChatIdRoute,
  MainMessagesIndexRoute: MainMessagesIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

interface PublicRouteChildren {
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/dashboard': typeof MainDashboardRoute
  '/donations': typeof MainDonationsRoute
  '/notifications': typeof MainNotificationsRoute
  '/profile': typeof MainProfileRoute
  '/requests': typeof MainRequestsRoute
  '/': typeof PublicIndexRoute
  '/messages/$chatId': typeof MainMessagesChatIdRoute
  '/messages': typeof MainMessagesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof MainRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/dashboard': typeof MainDashboardRoute
  '/donations': typeof MainDonationsRoute
  '/notifications': typeof MainNotificationsRoute
  '/profile': typeof MainProfileRoute
  '/requests': typeof MainRequestsRoute
  '/': typeof PublicIndexRoute
  '/messages/$chatId': typeof MainMessagesChatIdRoute
  '/messages': typeof MainMessagesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_main/dashboard': typeof MainDashboardRoute
  '/_main/donations': typeof MainDonationsRoute
  '/_main/notifications': typeof MainNotificationsRoute
  '/_main/profile': typeof MainProfileRoute
  '/_main/requests': typeof MainRequestsRoute
  '/_public/': typeof PublicIndexRoute
  '/_main/messages/$chatId': typeof MainMessagesChatIdRoute
  '/_main/messages/': typeof MainMessagesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/donations'
    | '/notifications'
    | '/profile'
    | '/requests'
    | '/'
    | '/messages/$chatId'
    | '/messages'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/donations'
    | '/notifications'
    | '/profile'
    | '/requests'
    | '/'
    | '/messages/$chatId'
    | '/messages'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_public'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_main/dashboard'
    | '/_main/donations'
    | '/_main/notifications'
    | '/_main/profile'
    | '/_main/requests'
    | '/_public/'
    | '/_main/messages/$chatId'
    | '/_main/messages/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main",
        "/_public"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/dashboard",
        "/_main/donations",
        "/_main/notifications",
        "/_main/profile",
        "/_main/requests",
        "/_main/messages/$chatId",
        "/_main/messages/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/_main/dashboard": {
      "filePath": "_main/dashboard.tsx",
      "parent": "/_main"
    },
    "/_main/donations": {
      "filePath": "_main/donations.tsx",
      "parent": "/_main"
    },
    "/_main/notifications": {
      "filePath": "_main/notifications.tsx",
      "parent": "/_main"
    },
    "/_main/profile": {
      "filePath": "_main/profile.tsx",
      "parent": "/_main"
    },
    "/_main/requests": {
      "filePath": "_main/requests.tsx",
      "parent": "/_main"
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/_main/messages/$chatId": {
      "filePath": "_main/messages/$chatId.tsx",
      "parent": "/_main"
    },
    "/_main/messages/": {
      "filePath": "_main/messages/index.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
